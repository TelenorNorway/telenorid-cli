name: ci
on: [push]
permissions:
  contents: write
jobs:
  quality-assurance:
    uses: ./.github/workflows/quality-assurance.yml
  versioning:
    name: Versioning
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      deploy: ${{ steps.version.outputs.deploy }}
    steps:
      - name: Test version
        id: version
        if:
          github.ref == 'refs/heads/main' &&
          startsWith(github.event.head_commit.message, 'v=')
        env:
          MSG: ${{ github.event.head_commit.message }}
        run: |
          if grep -qE "^v=[0-9]+.[0-9]+.[0-9]+$" <<< $MSG; then
            echo deploy=yes
            echo version=v$(echo $MSG | cut -c 3-)
          fi
  release:
    name: Release binaries
    runs-on: ubuntu-latest
    needs:
      - quality-assurance
      - versioning
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Apply version
        if: ${{ needs.versioning.outputs.deploy == 'yes' }}
        env:
          VERSION: ${{ needs.versioning.outputs.version }}
        run: |
          echo "export default \"${VERSION}\";\n" > version.ts

      - name: Compile
        if: ${{ needs.versioning.outputs.deploy == 'yes' }}
        run: |
          rm -rf bin
          mkdir bin
          for target in x86_64-unknown-linux-gnu x86_64-pc-windows-msvc x86_64-apple-darwin aarch64-apple-darwin; do
            deno compile -A -o bin/$target --target $target cli.ts
          done

      - name: Release artifacts
        if: ${{ needs.versioning.outputs.deploy == 'yes' }}
        env:
          VERSION: ${{ needs.versioning.outputs.version }}
        run: |
          git add .
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -m release
          git tag -f $VERSION
          git push -fu origin $VERSION
          gh release upload $VERSION bin/*
